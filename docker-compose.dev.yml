services:
  db:
    container_name: hotumap-db
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 2s
    image: postgis/postgis:14-3.4-alpine
    environment:
      - POSTGRES_DB=${UMAP_DB_NAME:-postgres}
      - POSTGRES_USER=${UMAP_DB_USER:-postgres}
      - POSTGRES_PASSWORD=${UMAP_DB_PASSWORD:-123456}
    volumes:
      - umap_db:/var/lib/postgresql/data
      - ./custom/tilelayers.csv:/umap/tilelayers.csv
      - ./scripts/import-tilelayers.sh:/umap/import-tilelayers.sh
      - ./scripts/import-tilelayers.sql:/umap/import-tilelayers.sql

  app:
    image: umap/umap:2.8.2
    container_name: hotumap
    ports:
      - "8001:8000"
    environment:
      - UMAP_SITE_URL=${UMAP_SITE_URL:-http://127.0.0.1:8001/}
      - UMAP_SETTINGS=/srv/umap/settings.py
      - UMAP_SECRET_KEY=${UMAP_SECRET_KEY:-somelonghash}
      - UMAP_DB_HOST=${UMAP_DB_HOST:-db}
      - UMAP_DB_NAME=${UMAP_DB_NAME:-postgres}
      - UMAP_DB_USER=${UMAP_DB_USER:-postgres}
      - UMAP_DB_PASSWORD=${UMAP_DB_PASSWORD:-123456}
      - UMAP_OSM_KEY=${UMAP_OSM_KEY}
      - DEBUG=${DEBUG:-true}
      - UMAP_OSM_SECRET=${UMAP_OSM_SECRET}
      - UMAP_SOCIAL_AUTH_REDIRECT_IS_HTTPS=${UMAP_SOCIAL_AUTH_REDIRECT_IS_HTTPS:-False}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_SECURITY_TOKEN=${S3_SECURITY_TOKEN:-}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - ENABLE_S3_STORAGE=${ENABLE_S3_STORAGE-True}
    volumes:
      - ./settings.py:/srv/umap/settings.py
      - ./data:/srv/umap/var/data
      - ./custom:/srv/umap/custom
      - ./docker/entrypoint.sh:/srv/umap/docker/entrypoint.sh
      - ./urls.py:/srv/umap/urls.py
      - ./manage.py:/srv/umap/manage.py
      - ./views.py:/srv/umap/views.py
      - ./wsgi.py:/srv/umap/wsgi.py
      - ./hotumap:/srv/umap/hotumap
    depends_on:
      db:
        condition: service_healthy

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-admin123}
      - MINIO_BUCKET=${MINIO_BUCKET:-umap-data}
      - MINIO_ACCESS_KEY=${S3_ACCESS_KEY}
      - MINIO_SECRET_KEY=${S3_SECRET_KEY}
    volumes:
      - data:/data
    command: server --console-address ":9001" /data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 admin admin123;
      /usr/bin/mc mb myminio/umap-data;
      /usr/bin/mc anonymous set public myminio/umap-data;
      exit 0;
      "

volumes:
  umap_userdata:
  umap_db:
  data:

